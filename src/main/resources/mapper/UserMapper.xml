<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atwp.mapper.UserMapper">

    <!-- 询的结果集字段和实体类的user属性名不一致，自定义查询结果集的映射规则
            id和type属性具体用法 查看官方文档-->
    <resultMap id="UserEntityMap" type="com.atwp.common.User">
<!--        在定义映射规则时主键是不可以省略的-->
        <id property="uid" column="uid"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="salt" column="salt"/>
        <result property="phone" column="phone"/>
        <result property="gender" column="gender"/>
        <result property="avatar" column="avatar"/>
        <result property="isDelete" column="is_delete"/>
        <result property="createdUser" column="created_user"/>
        <result property="createdTime" column="created_time"/>
        <result property="modifiedUser" column="modified_user"/>
        <result property="modifiedTime" column="modified_time"/>
    </resultMap>

<!--    useGeneratedKeys属性：表示开启某个字段的值递增 默认为false
        keyProperty属性：表示将表中的哪个字段作为主键递增
        具体属性的用法看官方文档 很清楚  https://mybatis.net.cn/sqlmap-xml.html-->
    <insert id="insert" useGeneratedKeys="true" keyProperty="uid">
        insert into t_user(
            username,password,salt,phone,email,gender,avatar,is_delete,
            created_user,created_time,modified_user,modified_time
        )
        values (
                   #{username},#{password},#{salt},#{phone},#{email},
                   #{gender},#{avatar},#{isDelete},
                   #{createdUser},#{createdTime},#{modifiedUser},#{modifiedTime}
               )
    </insert>

    <!--  用于查询的结果集字段和实体类的user属性名不一致，所以不能使用resultType，必须使用resultMap  -->
    <select id="findByUserName" resultMap="UserEntityMap">
        select * from t_user  where username = #{username}
    </select>

    <update id="updatePasswordByUid">
        update t_user set password=#{password},
            modified_user=#{modifiedUser},modified_time=#{modifiedTime}
        where uid=#{uid}
    </update>

    <select  id="findByUid" resultMap="UserEntityMap">
        select * from t_user where uid=#{uid}
    </select>

    <update id="updateInfoByUid">
        update t_user set
        <if test="phone!=null">phone=#{phone},</if>
        <if test="email!=null">email=#{email},</if>
        <if test="email!=null">gender=#{gender},</if>
        modified_user=#{modifiedUser},
        modified_time=#{modifiedTime}
        where uid=#{uid}
    </update>
    <update id="updateAvatarByUid">
        update t_user set
        avatar=#{avater},modified_user=#{modifiedUser}, modified_time=#{modifiedTime}
        where uid=#{uid}
    </update>
</mapper>